INI,__LIB_ERR_LAST_ERR
IMP,__LIB_STR_CPY
IMP,__LIB_STR_LEN
IMP,__LIB_ERR_HANDLER
IMP,__LIB_MEM_ALC
IMP,__LIB_MEM_CPY
IMP,__LIB_STR_RLS

; concatenates two strings
; can raise B1C_RTE_STR_TOOLONG or no memory error
; X - first string address, stack1 - second string address, returns address of a concatenated string in X
:__LIB_STR_APD
ASM
PUSH 0
PUSH 0 ; result
PUSHW X ; len1, len2
PUSHW X ; str1

CALLR __LIB_STR_CPY
CALLR __LIB_STR_LEN
LD (3, SP), A
LDW X, (__RET_ADDR_SIZE + 7, SP)
CALLR __LIB_STR_CPY
CALLR __LIB_STR_LEN
LD (4, SP), A
ADD A, (3, SP)
JRC ::__LBL_NEW_SIZE_WRONG
; B1C_MAX_STRING_SIZE
CP A, 253
JRULE ::__LBL_NEW_STR

:::__LBL_NEW_SIZE_WRONG
MOV (__LIB_ERR_LAST_ERR), B1C_RTE_STR_TOOLONG
CALLR __LIB_ERR_HANDLER
JRA ::__LBL_EXIT

:::__LBL_NEW_STR
TNZ A
JREQ ::__LBL_EXIT
PUSH A
ADD A, 2
CLRW X
LD XL, A
CALLR __LIB_MEM_ALC
LDW (6, SP), X
JRNE ::__LBL_ALC_OK
POP A
JRA ::__LBL_EXIT

:::__LBL_ALC_OK
LD A, 1
LD (X), A
POP A
INCW X
LD (X), A
INCW X
EXGW X, Y
LDW X, (1, SP)
JRMI ::__LBL_ROM_STR_1
INCW X
:::__LBL_ROM_STR_1
INCW X
PUSHW X
LD A, (5, SP)
CLRW X
LD XL, A
PUSHW X
EXGW X, Y
CALLR __LIB_MEM_CPY
ADDW X, (1, SP)
ADDW SP, 4
EXGW X, Y
LDW X, (__RET_ADDR_SIZE + 7, SP)
JRMI ::__LBL_ROM_STR_2
INCW X
:::__LBL_ROM_STR_2
INCW X
PUSHW X
LD A, (6, SP)
CLRW X
LD XL, A
PUSHW X
EXGW X, Y
CALLR __LIB_MEM_CPY
ADDW SP, 4

:::__LBL_EXIT
LDW X, (1, SP)
CALLR __LIB_STR_RLS
LDW X, (__RET_ADDR_SIZE + 7, SP)
CALLR __LIB_STR_RLS
LDW X, (5, SP)
ADDW SP, 6
RET
ENDASM
