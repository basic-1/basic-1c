INI,__LIB_ERR_LAST_ERR
IMP,__LIB_STR_CPY
IMP,__LIB_STR_LEN
IMP,__LIB_ERR_HANDLER
IMP,__LIB_AUX_MUL10
IMP,__LIB_AUX_NEG32
IMP,__LIB_STR_RLS

; converts string representation of a LONG integer value to the binary form
; X - input string, returns LONG value in Y:X
:__LIB_STR_CLNG
ASM
PUSH 0 ; unary minus flag (6)
PUSHW X ; original string (4)
PUSHW X ; string data ptr (2)

CALLR __LIB_STR_CPY
CALLR __LIB_STR_LEN
PUSH A ; string length (1)
TNZ A
JREQ ::__LBL_INV_STR

LDW X, (4, SP)
JRMI ::__LBL_ROM_STR
INCW X

:::__LBL_ROM_STR
INCW X

LD A, (X)
CP A, 45 ; '-'
JRNE ::__LBL_POS_VALUE
INC (6, SP) ; unary minus flag
INCW X
DEC (1, SP)
JREQ ::__LBL_INV_STR

:::__LBL_POS_VALUE
LDW (2, SP), X ; save string data ptr
CLRW X
CLRW Y

; Y:X - the resulting integer
:::__LBL_CVT_LOOP
CALLR __LIB_AUX_MUL10
TNZ A
JRNE ::__LBL_INV_STR

PUSHW X
LDW X, (4, SP)
LD A, (X)
INCW X
LDW (4, SP), X
POPW X
SUB A, 48 ; '0'
CP A, 9
JRUGT ::__LBL_INV_STR

PUSH A
PUSH 0
ADDW X, (1, SP)
ADDW SP, 2
RRWA Y
ADC A, 0
RRWA Y
ADC A, 0
RRWA Y
JRC ::__LBL_INV_STR

CPW Y, 0x8000
JRULT ::__LBL_NO_OVF
JRUGT ::__LBL_INV_STR
TNZW X
JRNE ::__LBL_INV_STR
TNZ (6, SP)
JREQ ::__LBL_INV_STR

:::__LBL_NO_OVF
DEC (1, SP)
JRNE ::__LBL_CVT_LOOP
JRA ::__LBL_EXIT

:::__LBL_INV_STR
MOV (__LIB_ERR_LAST_ERR), B1C_RTE_STR_INV_NUM
CALLR __LIB_ERR_HANDLER
CLRW X
CLRW Y

:::__LBL_EXIT
PUSHW X
PUSHW Y
LDW X, (8, SP)
CALLR __LIB_STR_RLS
POPW Y
POPW X
TNZ (6, SP)
JREQ ::__LBL_RET
CALLR __LIB_AUX_NEG32

:::__LBL_RET
ADDW SP, 6
RET
ENDASM