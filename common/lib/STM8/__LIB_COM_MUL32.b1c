; multiplies two 32-bit integers
; Y:X - multiplier 1, stack1 - multiplier 2, returns product in Y:X
;m1:   4 3 2 1
;m2:   4 3 2 1
;-------------
;          1.1+
;        1.2+
;      1.3+
;    1.4+
;        2.1+
;      2.2+
;    2.3+
;      3.1+
;    3.2+
;    4.1
:__LIB_COM_MUL32
ASM
PUSHW X
PUSHW Y ; mul1 (5)

; 1.1
LD A, (__RET_ADDR_SIZE + 8, SP) ; m2.1
MUL X, A ; m1.1 is already in XL
PUSHW X ; low word of product

; 3.1
MUL Y, A
PUSHW Y ; high word of product (1)

; 1.2
LD A, (8, SP) ; m1.1
LD XL, A
LD A, (__RET_ADDR_SIZE + 11, SP) ; m2.2
MUL X, A
ADDW X, (2, SP)
LDW (2, SP), X
JRNC ::__LBL_12_NC
INC (1, SP)
:::__LBL_12_NC

; 1.3
LD A, (8, SP) ; m1.1
LD XL, A
LD A, (__RET_ADDR_SIZE + 10, SP) ; m2.3
MUL X, A
ADDW X, (1, SP)
LDW (1, SP), X

; 1.4
LD A, (8, SP) ; m1.1
LD XL, A
LD A, (__RET_ADDR_SIZE + 9, SP) ; m2.4
MUL X, A
LD A, XL
ADD A, (1, SP)
LD (1, SP), A

; 2.1
LD A, (7, SP) ; m1.2
LD XL, A
LD A, (__RET_ADDR_SIZE + 12, SP) ; m2.1
MUL X, A
ADDW X, (2, SP)
LDW (2, SP), X
JRNC ::__LBL_21_NC
INC (1, SP)
:::__LBL_21_NC

; 2.2
LD A, (7, SP) ; m1.2
LD XL, A
LD A, (__RET_ADDR_SIZE + 11, SP) ; m2.2
MUL X, A
ADDW X, (1, SP)
LDW (1, SP), X

; 2.3
LD A, (7, SP) ; m1.2
LD XL, A
LD A, (__RET_ADDR_SIZE + 10, SP) ; m2.3
MUL X, A
LD A, XL
ADD A, (1, SP)
LD (1, SP), A

; 3.2
LD A, (6, SP) ; m1.3
LD XL, A
LD A, (__RET_ADDR_SIZE + 11, SP) ; m2.2
MUL X, A
LD A, XL
ADD A, (1, SP)
LD (1, SP), A

; 4.1
LD A, (5, SP) ; m1.4
LD XL, A
LD A, (__RET_ADDR_SIZE + 12, SP) ; m2.1
MUL X, A
LD A, XL
ADD A, (1, SP)
LD (1, SP), A

POPW Y
POPW X
ADDW SP, 4
RET
ENDASM
