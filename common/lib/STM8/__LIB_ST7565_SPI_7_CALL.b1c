INI,__LIB_CPU_OPT
INI,__LIB_ST7565_SPI_OPT
INI,__LIB_ST7565_SPI_INIT_LEN
INI,__LIB_ST7565_SPI_INIT
INI,__LIB_ST7565_SPI_MGN
INI,__LIB_ST7565_SPI_ZW
INI,__LIB_ST7565_SPI_COL
INI,__LIB_ST7565_SPI_ROW
INI,__LIB_ST7565_SPI_ROWS
INI,__LIB_ST7565_SPI_RST_PIN
INI,__LIB_ST7565_SPI_RST_PORT
INI,__LIB_ST7565_SPI_FONT_OPT
INI,__LIB_ST7565_SPI_FONT
IMP,__LIB_ST7565_SPI_RST_CFG_OUT
IMP,__LIB_ST7565_SPI_RST_LO
IMP,__LIB_ST7565_SPI_RST_HI
IMP,__LIB_ST7565_SPI_DC_CFG_OUT
IMP,__LIB_ST7565_SPI_DC_LO

; starts SPI and initializes ST7565 (START)
:__LIB_ST7565_SPI_7_CALL
; initialize and start SPI
IOCTL,"SPI"<STRING>,"MODE"<STRING>,"M3"<STRING>
IOCTL,"SPI"<STRING>,"MASTER"<STRING>
IOCTL,"SPI"<STRING>,"FRAMEFMT"<STRING>,"MSBFIRST"<STRING>
IOCTL,"SPI"<STRING>,"TRANSMODE"<STRING>,"SIMPLEX"<STRING>

LA,::__LCL_TMP_0,BYTE
&,__LIB_ST7565_SPI_OPT<BYTE>,1<BYTE>,::__LCL_TMP_0<BYTE>
; clear display start line
=,::__LCL_TMP_0<BYTE>,__LIB_ST7565_SPI_OPT<BYTE>
==,::__LCL_TMP_0<BYTE>,0<BYTE>
LF,::__LCL_TMP_0
JT,::__LBL_NO_CFGPINS
IOCTL,"SPI"<STRING>,"CFGPINS"<STRING>
CALL,__LIB_ST7565_SPI_RST_CFG_OUT
CALL,__LIB_ST7565_SPI_DC_CFG_OUT
:::__LBL_NO_CFGPINS

; different datasheets to ST7565/ST7567 chips give min. SPI clock period parameter (Tsync) equal to 400, 200, 100 or 50 ns
; depending on chip version or supply voltage. in fact all tested displays worked well with 8 MHz SPI speed (Tsync = 125 ns)
; uncomment the code fragment below to restrict the speed to 2 MHz max. (Tsync >= 500 ns)
;==,__LIB_CPU_OPT<BYTE>,0<BYTE>
;JF,::__LBL_CHECK_8MHZ
;IOCTL,"SPI"<STRING>,"PRESCALER"<STRING>,"DIV8"<STRING>
;JMP,::__LBL_PRESCLR_SET
;:::__LBL_CHECK_8MHZ
;==,__LIB_CPU_OPT<BYTE>,1<BYTE>
;JF,::__LBL_128KHZ
;IOCTL,"SPI"<STRING>,"PRESCALER"<STRING>,"DIV4"<STRING>
;JMP,::__LBL_PRESCLR_SET
;:::__LBL_128KHZ
;IOCTL,"SPI"<STRING>,"PRESCALER"<STRING>,"DIV2"<STRING>
;
;:::__LBL_PRESCLR_SET

IOCTL,"SPI"<STRING>,"START"<STRING>,"TX"<STRING>

; reset ST7565
==,__LIB_ST7565_SPI_RST_PIN<BYTE>,0<BYTE>
JT,::__LBL_SOFT_RST
CALL,__LIB_ST7565_SPI_RST_LO
; reset pulse width delay
IOCTL,"CPU"<STRING>,"DELAYMS"<STRING>,5<BYTE>
CALL,__LIB_ST7565_SPI_RST_HI
JMP,::__LBL_INIT_ST7565

:::__LBL_SOFT_RST
CALL,__LIB_ST7565_SPI_DC_LO
PUT,SPI,0xE2<BYTE>

; initialize ST7565
:::__LBL_INIT_ST7565
; wait for reset to complete
IOCTL,"CPU"<STRING>,"DELAYMS"<STRING>,5<BYTE>

CALL,__LIB_ST7565_SPI_DC_LO
ASM
LDW X, (__LIB_ST7565_SPI_INIT)
LD A, (__LIB_ST7565_SPI_INIT_LEN)
CLRW Y
LD YL, A
ENDASM
INL,__LIB_SPI_PUT_A_INL

>>,__LIB_ST7565_SPI_HRES<BYTE>,3<BYTE>,__LIB_ST7565_SPI_MGN<BYTE>
=,8<BYTE>,__LIB_ST7565_SPI_ZW<BYTE>
=,0<BYTE>,__LIB_ST7565_SPI_COL<BYTE>
=,0<BYTE>,__LIB_ST7565_SPI_ROWS<BYTE>
==,__LIB_ST7565_SPI_FONT<WORD>,0<WORD>
JT,::__LBL_NO_FONT
>>,__LIB_ST7565_SPI_VRES<BYTE>,3<BYTE>,__LIB_ST7565_SPI_ROWS<BYTE>
LA,::__LCL_TMP_1,BYTE
&,__LIB_ST7565_SPI_FONT_OPT<BYTE>,1<BYTE>,::__LCL_TMP_1<BYTE>
==,::__LCL_TMP_1<BYTE>,0<BYTE>
LF,::__LCL_TMP_1
JT,::__LBL_NO_FONT
>>,__LIB_ST7565_SPI_ROWS<BYTE>,1<BYTE>,__LIB_ST7565_SPI_ROWS<BYTE>
:::__LBL_NO_FONT
=,0<BYTE>,__LIB_ST7565_SPI_ROW<BYTE>

; clear screen
IOCTL,"ST7565_SPI"<STRING>,"CLR"<STRING>
RET
